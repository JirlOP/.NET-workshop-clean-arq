@page "/active-users"
@using UCR.ECCI.IS.ExampleProject.Application.Users.Services
@using UCR.ECCI.IS.ExampleProject.Domain.Users.Entities
@*
    inject directive is used to inject a service into the component. Services managed in program.cs.
*@
@inject IUserService UserService

<PageTitle>Active Users</PageTitle>

<h1>Active Users</h1>

<p>This component demonstrates fetching data from our backend API.</p>

@* if ctiveUsers is null, the Loading component will be displayed *@
<Loading  IsLoading="activeUsers == null">  
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Is Active</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in activeUsers!)
            {
                <tr>
                    <td>@user.UserId.ToString()</td>
                    <td>@user.Name.Value</td>
                    <td>@user.LastName.Value</td>
                    <td>@user.Email.Value</td>
                    <td>@user.IsActive</td>
                </tr>
            }
        </tbody>
    </table>
</Loading>

@code {
    // ? means that the variable can be null
    private IEnumerable<User>? activeUsers;

    protected override async Task OnInitializedAsync()
    {
        activeUsers = await UserService.GetActiveUsersAsync();
    }
}
